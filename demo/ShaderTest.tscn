[gd_scene load_steps=16 format=2]

[ext_resource path="res://ShaderTest.gd" type="Script" id=1]

[sub_resource type="QuadMesh" id=1]

[sub_resource type="VisualShaderNodeTextureUniform" id=12]
uniform_name = "DepthTexture"

[sub_resource type="VisualShaderNodeVectorFunc" id=13]
function = 34

[sub_resource type="VisualShaderNodeVectorScalarStep" id=14]
default_input_values = [ 0, 0.9, 1, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=17]
operator = 2

[sub_resource type="VisualShaderNodeVectorScalarStep" id=18]
default_input_values = [ 0, 0.02, 1, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeScalarUniform" id=19]
uniform_name = "AvailableDepth"

[sub_resource type="VisualShaderNodeTextureUniform" id=2]
uniform_name = "ColorTexture"

[sub_resource type="VisualShaderNodeVectorOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=4]
uniform_name = "BodyIndexTexture"

[sub_resource type="VisualShaderNodeTextureUniform" id=5]
uniform_name = "DepthSpaceTexture"

[sub_resource type="VisualShaderNodeVectorFunc" id=6]
function = 34

[sub_resource type="VisualShader" id=7]
code = "shader_type spatial;
render_mode specular_disabled, unshaded, shadows_disabled;

uniform float AvailableDepth;
uniform sampler2D DepthSpaceTexture;
uniform sampler2D DepthTexture;
uniform sampler2D BodyIndexTexture;
uniform sampler2D ColorTexture;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:21
	float n_out21p0 = AvailableDepth;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(DepthSpaceTexture, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// TextureUniform:13
	vec3 n_out13p0;
	float n_out13p1;
	{
		vec4 n_tex_read = texture(DepthTexture, n_out6p0.xy);
		n_out13p0 = n_tex_read.rgb;
		n_out13p1 = n_tex_read.a;
	}

// VectorFunc:15
	vec3 n_out15p0 = vec3(1.0, 1.0, 1.0) - n_out13p0;

// VectorScalarStep:16
	vec3 n_out16p0 = step(n_out21p0, n_out15p0);

// TextureUniform:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 n_tex_read = texture(BodyIndexTexture, n_out6p0.xy);
		n_out5p0 = n_tex_read.rgb;
		n_out5p1 = n_tex_read.a;
	}

// VectorScalarStep:20
	float n_in20p0 = 0.02000;
	vec3 n_out20p0 = step(n_in20p0, n_out5p0);

// VectorFunc:7
	vec3 n_out7p0 = vec3(1.0, 1.0, 1.0) - n_out20p0;

// VectorOp:4
	vec3 n_out4p0 = n_out16p0 * n_out7p0;

// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(ColorTexture, UV.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// VectorOp:19
	vec3 n_out19p0 = n_out4p0 * n_out3p0;

// Output:0
	ALBEDO = n_out19p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -927.75, 246.5 )
modes/specular = 4
flags/shadows_disabled = true
flags/unshaded = true
nodes/fragment/0/position = Vector2( 120, 480 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -220, 600 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -220, 480 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -820, 580 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( -1040, 460 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -420, 580 )
nodes/fragment/13/node = SubResource( 12 )
nodes/fragment/13/position = Vector2( -820, 400 )
nodes/fragment/15/node = SubResource( 13 )
nodes/fragment/15/position = Vector2( -620, 520 )
nodes/fragment/16/node = SubResource( 14 )
nodes/fragment/16/position = Vector2( -420, 480 )
nodes/fragment/19/node = SubResource( 17 )
nodes/fragment/19/position = Vector2( -40, 480 )
nodes/fragment/20/node = SubResource( 18 )
nodes/fragment/20/position = Vector2( -620, 580 )
nodes/fragment/21/node = SubResource( 19 )
nodes/fragment/21/position = Vector2( -620, 460 )
nodes/fragment/connections = PoolIntArray( 7, 0, 4, 1, 6, 0, 5, 0, 15, 0, 16, 1, 13, 0, 15, 0, 16, 0, 4, 0, 19, 0, 0, 0, 6, 0, 13, 0, 5, 0, 20, 1, 20, 0, 7, 0, 21, 0, 16, 0, 3, 0, 19, 1, 4, 0, 19, 0 )

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/AvailableDepth = null

[node name="Spatial" type="Spatial"]
script = ExtResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1.7, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 8 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0.726119 )
